TODO:
move these todos to github issues
code generation using t4
iron out issues with implicit casting. use specialisation instead of constraints?
allow using vector.Blend instead of vector<type, size>.Blend, it should be possible to figure out type and size from the arguments. move static functions out of struct? 
automatically generate Vector.cpp using TextTransform.exe


Blend testing, its here because it currently fails and t4 lacks proper commenting, old annoying copy is fine though
// Blend Functions
<#	for (int i = 0; i < vectorSizes.Length; i++)
	{ 
		//Required variables
		string vectorSize = vectorSizes[i], vectorSimdPrefix = vectorSimdPrefixes[i];

		//Niceties
		string vectorVariableName = "vector_" + vectorSize + "_";

		for (int j = 0; j < typeSizes.Length; j++)
		{ 
			//Required variables
			string typeSize = typeSizes[j];

			//Niceties
			string typeName = "int" + typeSize + "_t", fullVectorName = "vector<" + typeName + ", " + vectorSize + ">"; #>
<#= fullVectorName #> static Blend(const <#= fullVectorName #> comparision, const <#= fullVectorName #> falseValue, const <#= fullVectorName #> trueValue)
{
	return _<#= vectorSimdPrefix #>_blendv_epi8(falseValue.<#= vectorVariableName #>, trueValue.<#= vectorVariableName #>, comparision.<#= vectorVariableName #>);
}
<#		}
	} #>